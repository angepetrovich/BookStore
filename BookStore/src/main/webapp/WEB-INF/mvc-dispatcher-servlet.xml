<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:sec="http://www.springframework.org/schema/security"

       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd"
>
    <!-- twoja paczka z beanmi -->
    <context:component-scan base-package="org.example"/>
    <!-- adnotacje -->
    <sec:global-method-security pre-post-annotations="enabled"/>
    <mvc:annotation-driven/>
    <!-- MVC view resolver -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- zrodlo i polaczenie z baza stosujemy c3p0 →
   Pula polaczen — otwiera i przechowuje polaczenia. Nie ma potrzeby tworzenia nowego polaczenia
   za każdym razem, co poprawia wydajność całego systemu.-->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://db4free.net:3306/javaspring?serverTimezone=Europe/Warsaw" />
        <property name="user" value="angelina" />
        <property name="password" value="2816Angel"/>

        <!-- these are connection pool properties for C3P0 -->
        <property name="minPoolSize" value="2" />
        <property name="maxPoolSize" value="10" />
        <property name="maxIdleTime" value="20000" />
    </bean>

    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="packagesToScan" value="org.example.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="bcrypt" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager" />

    <!-- Add support for reading web resources: css, images, js, etc ... -->
    <mvc:resources location="/resources/" mapping="/resources/**"/>
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/login"/>
    <mvc:view-controller path="/logout"/>

    <sec:http>
        <sec:intercept-url pattern="/" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/adminregister" access="hasIpAddress('127.0.0.1') or hasIpAddress('::1')"/>
        <sec:intercept-url pattern="/register" access="permitAll()"/>
        <sec:intercept-url pattern="/login" access="isAnonymous()"/>
        <sec:intercept-url pattern="/logout" access="isAuthenticated()"/>

        <sec:intercept-url pattern="/books/list" access="permitAll()"/>
        <sec:intercept-url pattern="/books/saveBook" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/deleteBook" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/updateBookForm" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/formadd" access="hasAuthority('ROLE_ADMIN')"/>

        <sec:intercept-url pattern="/authors/list" access="permitAll()"/>
        <sec:intercept-url pattern="/authors/authorformadd" access="hasAuthority('ROLE_ADMIN')"/>

        <sec:intercept-url pattern="/cart" access="hasAuthority('ROLE_USER')"/>
        <sec:intercept-url pattern="/cart/**" access="hasAuthority('ROLE_USER')"/>
        <sec:intercept-url pattern="/cart/add" access="hasAuthority('ROLE_USER')"/>
        <sec:intercept-url pattern="/cart/delete" access="hasAuthority('ROLE_USER')"/>
        <sec:intercept-url pattern="/cart/delete/{bookId}" access="hasAuthority('ROLE_USER')"/>

        <sec:intercept-url pattern="/categories/list" access="permitAll()"/>
        <sec:intercept-url pattern="/categories/formadd" access="hasAuthority('ROLE_ADMIN')"/>


        <sec:intercept-url pattern="/**" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:form-login login-page="/login"/>
        <sec:logout logout-success-url="/"/>
        <sec:csrf disabled="true"/>
    </sec:http>

    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:password-encoder ref="bcrypt"/>
            <sec:jdbc-user-service data-source-ref="myDataSource"/>
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>